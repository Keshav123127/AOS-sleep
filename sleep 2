
Q.1) Write a C program to find file properties such as inode number, number of hard link, File
permissions, File size, File access and modification time and so on of a given file using stat()
system call. 

#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <time.h>
#include <pwd.h>
#include <grp.h>

int main(int argc, char *argv[])
{
    if (argc < 2) {
        printf("Usage: %s <filename>\n", argv[0]);
        exit(1);
    }

    struct stat fileStat;

    if (stat(argv[1], &fileStat) < 0) {
        perror("Error obtaining file information");
        exit(1);
    }

    printf("File: %s\n", argv[1]);
    printf("Inode Number: %lu\n", fileStat.st_ino);
    printf("Number of Hard Links: %lu\n", fileStat.st_nlink);
    printf("Owner: %s\n", getpwuid(fileStat.st_uid)->pw_name);
    printf("Group: %s\n", getgrgid(fileStat.st_gid)->gr_name);
    printf("File Size: %ld bytes\n", fileStat.st_size);

    // File Permissions
    printf("File Permissions: ");
    printf((S_ISDIR(fileStat.st_mode)) ? "d" : "-");
    printf((fileStat.st_mode & S_IRUSR) ? "r" : "-");
    printf((fileStat.st_mode & S_IWUSR) ? "w" : "-");
    printf((fileStat.st_mode & S_IXUSR) ? "x" : "-");
    printf((fileStat.st_mode & S_IRGRP) ? "r" : "-");
    printf((fileStat.st_mode & S_IWGRP) ? "w" : "-");
    printf((fileStat.st_mode & S_IXGRP) ? "x" : "-");
    printf((fileStat.st_mode & S_IROTH) ? "r" : "-");
    printf((fileStat.st_mode & S_IWOTH) ? "w" : "-");
    printf((fileStat.st_mode & S_IXOTH) ? "x" : "-");
    printf("\n");

    // Time Information
    printf("Last Access Time: %s", ctime(&fileStat.st_atime));
    printf("Last Modification Time: %s", ctime(&fileStat.st_mtime));
    printf("Last Status Change Time: %s", ctime(&fileStat.st_ctime));

    return 0;
}

Q.2) Write a C program that catches the ctrl-c (SIGINT) signal for the first time and display the
appropriate message and exits on pressing ctrl-c again. 


#include <stdio.h>
#include <stdlib.h>
#include <signal.h>

int count = 0;

void sigint_handler(int signum) {
    count++;
    if (count == 1) {
        printf("\nCtrl+C detected! Press Ctrl+C again to exit.\n");
        signal(SIGINT, sigint_handler);  // Reassign handler for next signal
    } else {
        printf("\nExiting program... Goodbye!\n");
        exit(0);
    }
}

int main() {
    signal(SIGINT, sigint_handler);

    printf("Program running... Press Ctrl+C to test signal handling.\n");

    while (1) {
        // Infinite loop to keep the program running
    }

    return 0;
}


