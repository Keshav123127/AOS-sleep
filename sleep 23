Q.1) Write a C program to find whether a given file is present in current directory or not

#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <string.h>

int main() {
    char filename[256];
    DIR *dir;
    struct dirent *entry;
    int found = 0;

    // Accept file name from user
    printf("Enter the file name to search: ");
    scanf("%s", filename);

    // Open current directory
    dir = opendir(".");
    if (dir == NULL) {
        perror("opendir failed");
        exit(1);
    }

    // Read directory entries
    while ((entry = readdir(dir)) != NULL) {
        if (strcmp(entry->d_name, filename) == 0) {
            found = 1;
            break;
        }
    }

    closedir(dir);

    if (found)
        printf("File '%s' is present in the current directory.\n", filename);
    else
        printf("File '%s' is NOT present in the current directory.\n", filename);

    return 0;
}

Q.2) Write a C program to Identify the type (Directory, character device, Block device, Regular file,
FIFO or pipe, symbolic link or socket) of given file using stat() system call

#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>

void print_file_type(mode_t mode) {
    if (S_ISREG(mode))
        printf("Regular File\n");
    else if (S_ISDIR(mode))
        printf("Directory\n");
    else if (S_ISCHR(mode))
        printf("Character Device\n");
    else if (S_ISBLK(mode))
        printf("Block Device\n");
    else if (S_ISFIFO(mode))
        printf("FIFO / Pipe\n");
    else if (S_ISLNK(mode))
        printf("Symbolic Link\n");
    else if (S_ISSOCK(mode))
        printf("Socket\n");
    else
        printf("Unknown\n");
}

int main(int argc, char *argv[]) {
    struct stat fileStat;

    if (argc != 2) {
        printf("Usage: %s <filename>\n", argv[0]);
        return 1;
    }

    if (stat(argv[1], &fileStat) < 0) {
        perror("stat failed");
        return 1;
    }

    printf("File: %s\nType: ", argv[1]);
    print_file_type(fileStat.st_mode);

    return 0;
}
